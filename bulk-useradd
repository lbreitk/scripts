#!/bin/bash
################################################################################
# Style Guide: https://google.github.io/styleguide/shellguide.html
# Bulk add users from file
#
# File should be a new-line delimited list of only user ids
#
# AUTHOR
#   Layne Breitkreutz (LayneX.Breitkreutz@intel.com)
#
# REVISION HISTORY
#   2020-02-01T00:45Z
#     Script created
################################################################################
gen_password(){
    < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c6
}

gen_password_hash(){
    local password
    password="$1"
    printf "%s" "${password}" | openssl passwd -1 -stdin
}

main(){
    local users=()
    local password
    local password_hash
    local status_add
    local status_expire
    local fmt
    fmt="%-12s%-12s%-40s%-12s%-12s\\n"

    # needs to be ran as root
    if [[ "$UID" != "0" ]]; then
        printf "This script must be ran as root, Exiting\\n"
        exit 1
    fi

    # read file
    mapfile -t users < "$1"

    printf "$fmt" "Username" "Password" "Password Hash" "User Add" "Password Expire"
    printf "$fmt" "--------" "--------" "-------------" "--------" "---------------"
    for user in "${users[@]}"; do
        password="$(gen_password)"
        password_hash="$(gen_password_hash "${password}")"

        if useradd --create-home --shell /bin/bash --password "${password_hash}" "${user}"; then
            status_add="Okay"
        else
            printf "Fail\\nAborting...\\n"
            exit 1
        fi 
        
        if chage -d 0 "${user}"; then
            status_expire="Okay"
        else
            printf "Fail\\nAborting...\\n"
            exit 1
        fi   
        printf "$fmt" "${user}" "${password}" "${password_hash}" "${status_add}" "${status_expire}"
    done
    printf "\\n"
    exit 0
}
main "$@"
